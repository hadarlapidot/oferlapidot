{"version":3,"sources":["Components/Header/Header.js","Components/Card2/Card2.js","Components/Card1/Card1.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Card2","alt","src","allow","width","height","Card1","Footer","class","href","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAWeA,G,uBARA,WACd,OACA,yBAAKC,UAAU,UACd,yE,KCeaC,MAlBf,WACC,OACE,yBAAKD,UAAU,8BACd,yBAAKA,UAAU,cACd,8CAED,yBAAKA,UAAU,SACd,4BAAQE,IAAI,QAAQF,UAAU,WAAWG,IAAI,qJAC5CC,MAAM,0EACPC,MAAM,MAAMC,OAAO,SAGpB,yBAAKN,UAAU,iBACd,kECGUO,EAhBD,WACb,OACC,6BAASP,UAAU,8BAClB,yBAAKA,UAAU,cACd,4CAED,yBAAKA,UAAU,SACd,4BAAQA,UAAU,WAAWK,MAAM,MAAMC,OAAO,MAAMH,IAAI,4CAA4CC,MAAM,6EAE7G,yBAAKJ,UAAU,iBACd,kNCGWQ,EAdA,WACd,OACC,4BAAQC,MAAM,gCACZ,2BAAOA,MAAM,YAAb,aAA+B,uBAAGA,MAAM,OAAT,qCAA/B,0BACA,yBAAKA,MAAM,UACT,uBAAGC,KAAK,aAAaC,MAAM,WAAWF,MAAM,gCAA5C,YACA,uBAAGC,KAAK,UAAaC,MAAM,QAAQF,MAAM,gCAAzC,gBACA,uBAAGC,KAAK,YAAaC,MAAM,UAAUF,MAAM,gCAA3C,cCcSG,MAZf,WACE,OACE,6BACE,kBAAC,EAAD,MADF,SAGW,kBAAC,EAAD,MACT,kBAAC,EAAD,MAJF,IAKE,kBAAC,EAAD,QCNcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.58dff727.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n\treturn(\r\n\t<div className='header'>\r\n\t\t<h1>Ofer Lapidot Drone Shootings and video</h1>\r\n\t</div>\r\n);}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\nimport '../Card1/Card.css'\r\n \r\nfunction Card2 () {\r\n\treturn(\r\n\t\t\t<div className='bb bw5 b--transparent card'>\r\n\t\t\t\t<div className='headOfCard'>\r\n\t\t\t\t\t<h3> lorem ipsum </h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='video'>\r\n\t\t\t\t\t<iframe alt='video' className='shadow-3' src=\"https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fofer.lapidot%2Fvideos%2F3168885903140419%2F&show_text=0&width=560\" \r\n\t\t\t\t\t allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\t\twidth=\"560\" height=\"315\">\r\n\t\t\t\t\t</iframe>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='contentOfCard'>\r\n\t\t\t\t\t<p>dsffsddddddddddddddddddddddddddd</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\nexport default Card2;\r\n","import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card1 = () => {\r\n\treturn(\r\n\t\t<article className='bb bw5 b--transparent card'>\r\n\t\t\t<div className='headOfCard'>\r\n\t\t\t\t<h3>lorem ipsum</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='video'>\r\n\t\t\t\t<iframe className='shadow-5' width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8LV9RrSd468\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" ></iframe>\r\n\t\t\t</div>\r\n\t\t\t<div className='contentOfCard'>\r\n\t\t\t\t<p>lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum</p>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t\t);\r\n}\r\n\r\nexport default Card1;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer class=\"pv4 ph3 ph5-m ph6-l mid-gray\">\r\n\t\t  <small class=\"f6 db tc\">Â© 2016 <b class=\"ttu\">OFER LAPIDOT DRONES SHOOTINGS Inc</b>., All Rights Reserved</small>\r\n\t\t  <div class=\"tc mt3\">\r\n\t\t    <a href=\"/language/\" title=\"Language\" class=\"f6 dib ph2 link mid-gray dim\">Language</a>\r\n\t\t    <a href=\"/terms/\"    title=\"Terms\" class=\"f6 dib ph2 link mid-gray dim\">Terms of Use</a>\r\n\t\t    <a href=\"/privacy/\"  title=\"Privacy\" class=\"f6 dib ph2 link mid-gray dim\">Privacy</a>\r\n\t\t  </div>\r\n\t\t</footer>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Header from './Components/Header/Header.js';\nimport Card2 from './Components/Card2/Card2.js';\nimport Card1 from './Components/Card1/Card1.js';\nimport Footer from './Components/Footer/Footer.js';\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n{     /* <Intro />\n      */}      <Card1 />\n      <Card2 />*\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}